[{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":14,"column":37},"end":{"line":31,"column":5}},"range":[627,1283],"testsRan":[],"originalLines":"    .config(function($routeProvider) {\n        $routeProvider\n            .when('/', {\n                template: require('./templates/all-articles.html'),\n                controller: 'AllArticlesController',\n                controllerAs: 'allArticlesCtrl'\n            })\n            .when('/add', {\n                template: require('./templates/add-edit-article.html'),\n                controller: 'AddArticleController',\n                controllerAs: '$ctrl'\n            })\n            .when('/:id/edit', {\n                template: require('./templates/add-edit-article.html'),\n                controller: 'EditArticleController',\n                controllerAs: '$ctrl'\n            });\n    })","mutatedLines":"    .config(function($routeProvider) {\n})"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":38,"column":53},"end":{"line":40,"column":1}},"range":[1621,1666],"testsRan":[],"originalLines":"angular.element(document).ready(function bootstrap() {\n    angular.bootstrap(document, ['app']);\n});","mutatedLines":"angular.element(document).ready(function bootstrap() {\n});"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.js","mutatorName":"ArrayDeclarator","status":3,"replacement":"[]","location":{"start":{"line":39,"column":32},"end":{"line":39,"column":39}},"range":[1655,1662],"testsRan":[],"originalLines":"    angular.bootstrap(document, ['app']);","mutatedLines":"    angular.bootstrap(document, []);"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.js","mutatorName":"ArrayDeclarator","status":3,"replacement":"[]","location":{"start":{"line":13,"column":19},"end":{"line":13,"column":66}},"range":[541,588],"testsRan":[],"originalLines":"    .module('app', ['ngResource', 'ngRoute', 'articlesListModule'])","mutatedLines":"    .module('app', [])"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":33},"end":{"line":6,"column":5}},"range":[86,118],"testsRan":[],"originalLines":"    function addNewArticle(task) {\n        list.push(task);\n    }","mutatedLines":"    function addNewArticle(task) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":31},"end":{"line":43,"column":1}},"range":[31,942],"testsRan":[],"originalLines":"function AppService($resource) {\n    let list = [];\n\n    function addNewArticle(task) {\n        list.push(task);\n    }\n\n    function getList() {\n        return list;\n    }\n\n    function getListPromise() {\n        return $resource('./articles.json').get().$promise.then(data => {\n            list = data.array\n\n            return list;\n        });\n    }\n\n    function getArticleById(id) {\n        return list.find(item => item.id === id);\n    }\n\n    function isListExists() {\n        return !!list.length;\n    }\n\n    function updateArticle(id, newTitle, newContent) {\n        var article = list.find(item => item.id === id);\n\n        article.title = newTitle;\n        article.content = newContent;\n    }\n\n    return {\n        addNewArticle: addNewArticle,\n        getList: getList,\n        getListPromise: getListPromise,\n        getArticleById: getArticleById,\n        isListExists: isListExists,\n        updateArticle: updateArticle\n    };\n}","mutatedLines":"function AppService($resource) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":8,"column":23},"end":{"line":10,"column":5}},"range":[143,171],"testsRan":[],"originalLines":"    function getList() {\n        return list;\n    }","mutatedLines":"    function getList() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":12,"column":30},"end":{"line":18,"column":5}},"range":[203,352],"testsRan":[],"originalLines":"    function getListPromise() {\n        return $resource('./articles.json').get().$promise.then(data => {\n            list = data.array\n\n            return list;\n        });\n    }","mutatedLines":"    function getListPromise() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":24,"column":28},"end":{"line":26,"column":5}},"range":[473,510],"testsRan":[],"originalLines":"    function isListExists() {\n        return !!list.length;\n    }","mutatedLines":"    function isListExists() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":13,"column":72},"end":{"line":17,"column":9}},"range":[277,344],"testsRan":[],"originalLines":"        return $resource('./articles.json').get().$promise.then(data => {\n            list = data.array\n\n            return list;\n        });","mutatedLines":"        return $resource('./articles.json').get().$promise.then(data => {\n});"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BinaryOperator","status":3,"replacement":"item.id !== id","location":{"start":{"line":21,"column":33},"end":{"line":21,"column":47}},"range":[421,435],"testsRan":[],"originalLines":"        return list.find(item => item.id === id);","mutatedLines":"        return list.find(item => item.id !== id);"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":20,"column":32},"end":{"line":22,"column":5}},"range":[386,443],"testsRan":[],"originalLines":"    function getArticleById(id) {\n        return list.find(item => item.id === id);\n    }","mutatedLines":"    function getArticleById(id) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BooleanSubstitution","status":3,"replacement":"list.length","location":{"start":{"line":25,"column":16},"end":{"line":25,"column":28}},"range":[491,503],"testsRan":[],"originalLines":"        return !!list.length;","mutatedLines":"        return !list.length;"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BooleanSubstitution","status":3,"replacement":"!list.length","location":{"start":{"line":25,"column":15},"end":{"line":25,"column":28}},"range":[490,503],"testsRan":[],"originalLines":"        return !!list.length;","mutatedLines":"        return !list.length;"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":28,"column":53},"end":{"line":33,"column":5}},"range":[565,702],"testsRan":[],"originalLines":"    function updateArticle(id, newTitle, newContent) {\n        var article = list.find(item => item.id === id);\n\n        article.title = newTitle;\n        article.content = newContent;\n    }","mutatedLines":"    function updateArticle(id, newTitle, newContent) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/app.service.js","mutatorName":"BinaryOperator","status":3,"replacement":"item.id !== id","location":{"start":{"line":29,"column":40},"end":{"line":29,"column":54}},"range":[607,621],"testsRan":[],"originalLines":"        var article = list.find(item => item.id === id);","mutatedLines":"        var article = list.find(item => item.id !== id);"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":43},"end":{"line":14,"column":1}},"range":[43,342],"testsRan":[],"originalLines":"function ArticlesListController($location) {\n    let vm = this;\n\n    function onArticleClick(id) {\n        $location.path('/' + id + '/edit');\n    }\n\n    function onPageUpdate(indices) {\n        vm.page = vm.list.slice(indices.startIndex, indices.endIndex);\n    }\n\n    vm.onArticleClick = onArticleClick;\n    vm.onPageUpdate = onPageUpdate;\n}","mutatedLines":"function ArticlesListController($location) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"'/' + id - '/edit'","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":41}},"range":[122,140],"testsRan":[],"originalLines":"        $location.path('/' + id + '/edit');","mutatedLines":"        $location.path('/' + id - '/edit');"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"'/' - id","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":31}},"range":[122,130],"testsRan":[],"originalLines":"        $location.path('/' + id + '/edit');","mutatedLines":"        $location.path('/' - id + '/edit');"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":32},"end":{"line":6,"column":5}},"range":[97,148],"testsRan":[],"originalLines":"    function onArticleClick(id) {\n        $location.path('/' + id + '/edit');\n    }","mutatedLines":"    function onArticleClick(id) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":8,"column":35},"end":{"line":10,"column":5}},"range":[185,263],"testsRan":[],"originalLines":"    function onPageUpdate(indices) {\n        vm.page = vm.list.slice(indices.startIndex, indices.endIndex);\n    }","mutatedLines":"    function onPageUpdate(indices) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/articles-list/articles-list.module.js","mutatorName":"ArrayDeclarator","status":3,"replacement":"[]","location":{"start":{"line":7,"column":34},"end":{"line":7,"column":53}},"range":[203,222],"testsRan":[],"originalLines":"    .module('articlesListModule', ['paginatorModule'])","mutatedLines":"    .module('articlesListModule', [])"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":3,"column":39},"end":{"line":27,"column":1}},"range":[66,641],"testsRan":[],"originalLines":"function PaginatorController($timeout) {\n    var vm = this;\n\n    function onInit() {\n        vm.pages = [];\n\n        $timeout(function() {\n            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {\n                vm.pages.push({\n                    startIndex: i * ELEMENTS_ON_PAGE,\n                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE\n                });\n            }\n\n            vm.setPage(0);\n        }, 0);\n    }\n\n    function setPage(pageIndex) {\n        vm.updatePage({indices: vm.pages[pageIndex]});\n    }\n\n    vm.$onInit = onInit;\n    vm.setPage = setPage;\n}","mutatedLines":"function PaginatorController($timeout) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":6,"column":22},"end":{"line":19,"column":5}},"range":[110,491],"testsRan":[],"originalLines":"    function onInit() {\n        vm.pages = [];\n\n        $timeout(function() {\n            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {\n                vm.pages.push({\n                    startIndex: i * ELEMENTS_ON_PAGE,\n                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE\n                });\n            }\n\n            vm.setPage(0);\n        }, 0);\n    }","mutatedLines":"    function onInit() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":9,"column":28},"end":{"line":18,"column":9}},"range":[164,480],"testsRan":[],"originalLines":"        $timeout(function() {\n            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {\n                vm.pages.push({\n                    startIndex: i * ELEMENTS_ON_PAGE,\n                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE\n                });\n            }\n\n            vm.setPage(0);\n        }, 0);","mutatedLines":"        $timeout(function() {\n}, 0);"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"i >= Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE)","location":{"start":{"line":10,"column":28},"end":{"line":10,"column":78}},"range":[194,244],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {","mutatedLines":"            for (var i = 0; i >= Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"RemoveConditionals","status":3,"replacement":"false","location":{"start":{"line":10,"column":28},"end":{"line":10,"column":78}},"range":[194,244],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {","mutatedLines":"            for (var i = 0; false; ++i) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"i <= Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE)","location":{"start":{"line":10,"column":28},"end":{"line":10,"column":78}},"range":[194,244],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {","mutatedLines":"            for (var i = 0; i <= Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"vm.articlesCount * ELEMENTS_ON_PAGE","location":{"start":{"line":10,"column":42},"end":{"line":10,"column":77}},"range":[208,243],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {","mutatedLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount * ELEMENTS_ON_PAGE); ++i) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"i / ELEMENTS_ON_PAGE","location":{"start":{"line":12,"column":32},"end":{"line":12,"column":52}},"range":[317,337],"testsRan":[],"originalLines":"                    startIndex: i * ELEMENTS_ON_PAGE,","mutatedLines":"                    startIndex: i / ELEMENTS_ON_PAGE,"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"UpdateOperator","status":3,"replacement":"--i","location":{"start":{"line":10,"column":80},"end":{"line":10,"column":83}},"range":[246,249],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {","mutatedLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); --i) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":10,"column":85},"end":{"line":15,"column":13}},"range":[251,442],"testsRan":[],"originalLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {\n                vm.pages.push({\n                    startIndex: i * ELEMENTS_ON_PAGE,\n                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE\n                });\n            }","mutatedLines":"            for (var i = 0; i < Math.ceil(vm.articlesCount / ELEMENTS_ON_PAGE); ++i) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"i * ELEMENTS_ON_PAGE - ELEMENTS_ON_PAGE","location":{"start":{"line":13,"column":30},"end":{"line":13,"column":69}},"range":[369,408],"testsRan":[],"originalLines":"                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE","mutatedLines":"                    endIndex: i * ELEMENTS_ON_PAGE - ELEMENTS_ON_PAGE"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":21,"column":32},"end":{"line":23,"column":5}},"range":[525,587],"testsRan":[],"originalLines":"    function setPage(pageIndex) {\n        vm.updatePage({indices: vm.pages[pageIndex]});\n    }","mutatedLines":"    function setPage(pageIndex) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/add-article.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":57},"end":{"line":16,"column":1}},"range":[57,399],"testsRan":[],"originalLines":"function AddArticleController($location, articleService) {\n    var vm = this;\n\n    function onArticleChange() {\n        articleService.addNewArticle({\n            title: vm.title,\n            content: vm.content,\n            id: Math.random().toString(36).substr(2, 5)\n        });\n\n        $location.path('/');\n    }\n\n    vm.heading = 'Add a new article';\n    vm.onArticleChange = onArticleChange;\n}","mutatedLines":"function AddArticleController($location, articleService) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/components/paginator/paginator.component.js","mutatorName":"BinaryOperator","status":3,"replacement":"i / ELEMENTS_ON_PAGE","location":{"start":{"line":13,"column":30},"end":{"line":13,"column":50}},"range":[369,389],"testsRan":[],"originalLines":"                    endIndex: i * ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE","mutatedLines":"                    endIndex: i / ELEMENTS_ON_PAGE + ELEMENTS_ON_PAGE"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/add-article.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":31},"end":{"line":12,"column":5}},"range":[110,316],"testsRan":[],"originalLines":"    function onArticleChange() {\n        articleService.addNewArticle({\n            title: vm.title,\n            content: vm.content,\n            id: Math.random().toString(36).substr(2, 5)\n        });\n\n        $location.path('/');\n    }","mutatedLines":"    function onArticleChange() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":58},"end":{"line":19,"column":1}},"range":[58,464],"testsRan":[],"originalLines":"function AllArticlesController($location, articleService) {\n    var vm = this;\n\n    function addArticle() {\n        $location.path('/add');\n    }\n\n    (function onInit() {\n        if (articleService.isListExists()) {\n            vm.articleList = articleService.getList();\n        } else {\n            articleService.getListPromise().then(function(data) {\n                vm.articleList = data;\n            })\n        };\n    })();\n\n    vm.addArticle = addArticle;\n}","mutatedLines":"function AllArticlesController($location, articleService) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":26},"end":{"line":6,"column":5}},"range":[106,145],"testsRan":[],"originalLines":"    function addArticle() {\n        $location.path('/add');\n    }","mutatedLines":"    function addArticle() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":8,"column":23},"end":{"line":16,"column":5}},"range":[170,425],"testsRan":[],"originalLines":"    (function onInit() {\n        if (articleService.isListExists()) {\n            vm.articleList = articleService.getList();\n        } else {\n            articleService.getListPromise().then(function(data) {\n                vm.articleList = data;\n            })\n        };\n    })();","mutatedLines":"    (function onInit() {\n})();"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"RemoveConditionals","status":3,"replacement":"false","location":{"start":{"line":9,"column":12},"end":{"line":9,"column":41}},"range":[184,213],"testsRan":[],"originalLines":"        if (articleService.isListExists()) {","mutatedLines":"        if (false) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"RemoveConditionals","status":3,"replacement":"true","location":{"start":{"line":9,"column":12},"end":{"line":9,"column":41}},"range":[184,213],"testsRan":[],"originalLines":"        if (articleService.isListExists()) {","mutatedLines":"        if (true) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":9,"column":43},"end":{"line":11,"column":9}},"range":[215,281],"testsRan":[],"originalLines":"        if (articleService.isListExists()) {\n            vm.articleList = articleService.getList();\n        } else {","mutatedLines":"        if (articleService.isListExists()) {\n} else {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":11,"column":15},"end":{"line":15,"column":9}},"range":[287,418],"testsRan":[],"originalLines":"        } else {\n            articleService.getListPromise().then(function(data) {\n                vm.articleList = data;\n            })\n        };","mutatedLines":"        } else {\n};"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/all-articles.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":12,"column":64},"end":{"line":14,"column":13}},"range":[353,407],"testsRan":[],"originalLines":"            articleService.getListPromise().then(function(data) {\n                vm.articleList = data;\n            })","mutatedLines":"            articleService.getListPromise().then(function(data) {\n})"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/edit-article.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":72},"end":{"line":14,"column":1}},"range":[72,452],"testsRan":[],"originalLines":"function EditArticleController($location, $routeParams, articleService) {\n    let vm = this;\n\n    function onArticleChange() {\n        articleService.updateArticle(vm.article.id, vm.title, vm.content);\n        $location.path('/');\n    }\n\n    vm.heading = 'Edit an article';\n    vm.onArticleChange = onArticleChange;\n    vm.article = articleService.getArticleById($routeParams.id);\n    vm.content = vm.article.content;\n    vm.title = vm.article.title;\n}","mutatedLines":"function EditArticleController($location, $routeParams, articleService) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/controllers/edit-article.controller.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":31},"end":{"line":7,"column":5}},"range":[125,236],"testsRan":[],"originalLines":"    function onArticleChange() {\n        articleService.updateArticle(vm.article.id, vm.title, vm.content);\n        $location.path('/');\n    }","mutatedLines":"    function onArticleChange() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":1,"column":30},"end":{"line":18,"column":1}},"range":[30,496],"testsRan":[],"originalLines":"function MinLengthDirective() {\n    return {\n        require: 'ngModel',\n        link: function($scope, $element, $attr, $ctrl) {\n            function lengthValidation(value) {\n                if (value.length >= 20) {\n                    $ctrl.$setValidity('minLength', true);\n                } else {\n                    $ctrl.$setValidity('minLength', false);\n                }\n\n                return value;\n            }\n\n            $ctrl.$parsers.push(lengthValidation);\n        }\n    };\n}","mutatedLines":"function MinLengthDirective() {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":4,"column":55},"end":{"line":16,"column":9}},"range":[128,487],"testsRan":[],"originalLines":"        link: function($scope, $element, $attr, $ctrl) {\n            function lengthValidation(value) {\n                if (value.length >= 20) {\n                    $ctrl.$setValidity('minLength', true);\n                } else {\n                    $ctrl.$setValidity('minLength', false);\n                }\n\n                return value;\n            }\n\n            $ctrl.$parsers.push(lengthValidation);\n        }","mutatedLines":"        link: function($scope, $element, $attr, $ctrl) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":5,"column":45},"end":{"line":13,"column":13}},"range":[175,425],"testsRan":[],"originalLines":"            function lengthValidation(value) {\n                if (value.length >= 20) {\n                    $ctrl.$setValidity('minLength', true);\n                } else {\n                    $ctrl.$setValidity('minLength', false);\n                }\n\n                return value;\n            }","mutatedLines":"            function lengthValidation(value) {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"RemoveConditionals","status":3,"replacement":"false","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":38}},"range":[197,215],"testsRan":[],"originalLines":"                if (value.length >= 20) {","mutatedLines":"                if (false) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"RemoveConditionals","status":3,"replacement":"true","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":38}},"range":[197,215],"testsRan":[],"originalLines":"                if (value.length >= 20) {","mutatedLines":"                if (true) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BinaryOperator","status":3,"replacement":"value.length > 20","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":38}},"range":[197,215],"testsRan":[],"originalLines":"                if (value.length >= 20) {","mutatedLines":"                if (value.length > 20) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BinaryOperator","status":3,"replacement":"value.length < 20","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":38}},"range":[197,215],"testsRan":[],"originalLines":"                if (value.length >= 20) {","mutatedLines":"                if (value.length < 20) {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":6,"column":40},"end":{"line":8,"column":17}},"range":[217,295],"testsRan":[],"originalLines":"                if (value.length >= 20) {\n                    $ctrl.$setValidity('minLength', true);\n                } else {","mutatedLines":"                if (value.length >= 20) {\n} else {"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BooleanSubstitution","status":3,"replacement":"false","location":{"start":{"line":7,"column":52},"end":{"line":7,"column":56}},"range":[271,275],"testsRan":[],"originalLines":"                    $ctrl.$setValidity('minLength', true);","mutatedLines":"                    $ctrl.$setValidity('minLength', false);"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BlockStatement","status":3,"replacement":"{\n}","location":{"start":{"line":8,"column":23},"end":{"line":10,"column":17}},"range":[301,380],"testsRan":[],"originalLines":"                } else {\n                    $ctrl.$setValidity('minLength', false);\n                }","mutatedLines":"                } else {\n}"},{"sourceFilePath":"/Users/anastasiazaharova/Desktop/nananananabatman.github.io/angular-task/src/directives/min-length.directive.js","mutatorName":"BooleanSubstitution","status":3,"replacement":"true","location":{"start":{"line":9,"column":52},"end":{"line":9,"column":57}},"range":[355,360],"testsRan":[],"originalLines":"                    $ctrl.$setValidity('minLength', false);","mutatedLines":"                    $ctrl.$setValidity('minLength', true);"}]